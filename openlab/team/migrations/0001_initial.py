# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-22 03:49
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import openlab.core.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities_light', '0006_compensate_for_0003_bytestring_bug'),
        ('taggit', '0002_auto_20150616_2121'),
        ('gallery', '__first__'),
        ('discussion', '__first__'),
        ('wiki', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(db_index=False, max_length=32)),
                ('hubpath', models.CharField(db_index=True, help_text="Absolute URL for this, ie 'team-name/project-name' or 'team-name'", max_length=96, unique=True)),
                ('olmarkdown_rendered', models.TextField(blank=True, help_text='HTML for rendered OL Markdown')),
                ('olmarkdown_summary', models.TextField(blank=True, help_text='Text-only suffix of rendered, for rendered OL Markdown')),
                ('olmarkdown_rendered_date', models.DateTimeField(blank=True, null=True)),
                ('street_address', models.TextField(blank=True, default='', help_text='Street address for the project.')),
                ('longitude', models.DecimalField(blank=True, decimal_places=5, help_text='Longitude for the project', max_digits=8, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=5, help_text='Latitude for the project', max_digits=8, null=True)),
                ('title', models.CharField(max_length=255, verbose_name='Name')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('summary', models.CharField(help_text='Describe in in 140 characters or less. (No paragraphs.)', max_length=140, verbose_name='Summary')),
                ('visibility', models.CharField(choices=[('pu', 'Public'), ('un', 'Unlisted'), ('og', 'Need to log in'), ('pr', 'Private'), ('lp', 'Locked - Private'), ('lu', 'Locked - Unlisted'), ('lo', 'Locked - Logged in only')], db_index=True, default='pu', max_length=2)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.City')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.Country')),
                ('gallery', models.ForeignKey(blank=True, help_text='Image gallery for the project', null=True, on_delete=django.db.models.deletion.CASCADE, to='gallery.Gallery')),
                ('members', models.ManyToManyField(help_text='Members in the team', related_name='teams', to=settings.AUTH_USER_MODEL)),
                ('photo', models.ForeignKey(blank=True, help_text='Select a photo to be used as an icon. You can only select from photos you have already uploaded to the gallery.', null=True, on_delete=django.db.models.deletion.CASCADE, to='gallery.Photo')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.Region')),
                ('tags', taggit.managers.TaggableManager(help_text='Tags for the project', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('threads', models.ManyToManyField(help_text='Threads related to this', to='discussion.Thread')),
                ('user', models.ForeignKey(help_text='Manager of the team', on_delete=django.db.models.deletion.CASCADE, related_name='managed_team', to=settings.AUTH_USER_MODEL)),
                ('wikisite', models.ForeignKey(blank=True, help_text='Project wiki', null=True, on_delete=django.db.models.deletion.CASCADE, to='wiki.WikiSite')),
            ],
            options={
                'get_latest_by': 'updated_date',
                'abstract': False,
            },
            bases=(openlab.core.models.UpdateMixin, models.Model),
        ),
    ]
