# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-06-08 00:09
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities_light', '0006_compensate_for_0003_bytestring_bug'),
        ('discussion', '0002_auto_20170607_1709'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wiki', '0001_initial'),
        ('project', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
        ('release', '0001_initial'),
        ('gallery', '0002_auto_20170607_1709'),
        ('team', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='userpermission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_userpermission', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='teampermission',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teampermission_permission', to='project.Project'),
        ),
        migrations.AddField(
            model_name='teampermission',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_teampermission', to='team.Team'),
        ),
        migrations.AddField(
            model_name='project',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.City'),
        ),
        migrations.AddField(
            model_name='project',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.Country'),
        ),
        migrations.AddField(
            model_name='project',
            name='dependencies',
            field=models.ManyToManyField(help_text='Sub-projects that this project uses', related_name='used_by_projects', to='project.Project'),
        ),
        migrations.AddField(
            model_name='project',
            name='forked_from',
            field=models.ForeignKey(blank=True, help_text='Project that this project was forked from', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forks', to='project.Project'),
        ),
        migrations.AddField(
            model_name='project',
            name='gallery',
            field=models.ForeignKey(blank=True, help_text='Image gallery for the project', null=True, on_delete=django.db.models.deletion.CASCADE, to='gallery.Gallery'),
        ),
        migrations.AddField(
            model_name='project',
            name='photo',
            field=models.ForeignKey(blank=True, help_text='Select a photo to be used as an icon. You can only select from photos you have already uploaded to the gallery.', null=True, on_delete=django.db.models.deletion.CASCADE, to='gallery.Photo'),
        ),
        migrations.AddField(
            model_name='project',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cities_light.Region'),
        ),
        migrations.AddField(
            model_name='project',
            name='release',
            field=models.ForeignKey(blank=True, help_text='Latest stable release', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='latest_stable', to='release.Release'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='Tags for the project', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='project',
            name='team',
            field=models.ForeignKey(blank=True, help_text='Team that can manage the project', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_projects', to='team.Team'),
        ),
        migrations.AddField(
            model_name='project',
            name='team_access',
            field=models.ManyToManyField(related_name='permissions', through='project.TeamPermission', to='team.Team'),
        ),
        migrations.AddField(
            model_name='project',
            name='threads',
            field=models.ManyToManyField(help_text='Threads related to this', to='discussion.Thread'),
        ),
        migrations.AddField(
            model_name='project',
            name='user',
            field=models.ForeignKey(help_text='Creator of the project', on_delete=django.db.models.deletion.CASCADE, related_name='project', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='user_access',
            field=models.ManyToManyField(related_name='permissions', through='project.UserPermission', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='wikisite',
            field=models.ForeignKey(blank=True, help_text='Project wiki', null=True, on_delete=django.db.models.deletion.CASCADE, to='wiki.WikiSite'),
        ),
    ]
